{
	"Test Group": {
		"prefix": "gt",
		"body": [
			"group('$0', () {",
			"",
			"});"
		],
		"description": "A Test Group"
	},
	"Flutter Unit Test": {
		"prefix": "aaa",
		"body": [
			"test('should $0', () async {",
			"    // arrange",
			"",
			"    // act",
			"",
			"    // assert",
			"});"
		],
		"description": "A Flutter Test Based on Arrange, Act and Assert"
	},
	"BLoC Basis": {
		"prefix": "bbasis",
		"body": [
			"import 'dart:async';",
			"",
			"import 'package:bloc_basis/bloc_basis.dart';",
			"",
			"class $1Bloc extends BlocBasis<$1Bloc> {",
			"",
			"  @override",
			"  late BehaviorSubject<BlocState<$1Bloc>> state;",
			"  @override",
			"  late BehaviorSubject<BlocEvent<$1Bloc>> event;",
			"",
			"  @override",
			"  void mapEventToState() {",
			"    event.switchMap((e) async* {",
			"    yield $1LoadingState();",
			"",
			"    ${0:/// Put your logic here!}",
			"",
			"    }).listen((value) => state.add(value));",
			"  }",
			"",
			"  @override",
			"  Future<void> dispose() async {",
			"    await state.close();",
			"    await event.close();",
			"  }",
			"",
			"}",
			"",
			"///",
			"/// EVENTS SECTION",
			"///", 
			"class $1InitialEvent extends BlocEvent<$1Bloc> {}",
			"",
			"///",
			"/// STATES SECTION",
			"///", 
			"class $1LoadingState extends BlocState<$1Bloc> {}",
			"class $1ErrorState extends BlocState<$1Bloc> {}",
			"class $1LoadedState extends BlocState<$1Bloc> {}",
		],
        "description": "A Simple Flutter BLoC Scaffold"
	},
	"BLoC Basis Builder": {
		"prefix": "bbb",
		"body": [
			"BlocbasisBuilder<$1>(",
			"  listenState: $2,",
			"  defaultChild: const Center(child: CircularProgressIndicator()),",
			"  blocBuilder: (context, state) {",
			"    ${0:/// Return your widget here!}",
			"  }",
			")"
		],
        "description": "A Simple Flutter BLoC Scaffold"
	}
}