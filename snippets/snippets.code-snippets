{
	"Test Group": {
		"prefix": "gt",
		"body": [
			"group('$0', () {",
			"",
			"});"
		],
		"description": "A Test Group"
	},
	"Flutter Test": {
		"prefix": "aaa",
		"body": [
			"test('should $0', () async {",
			"    // arrange",
			"",
			"    // act",
			"",
			"    // assert",
			"});"
		],
		"description": "A Flutter Test Based on Arrange, Act and Assert"
	},
	"Rx BLoC": {
		"prefix": "rxbloc",
		"body": [
			"import 'dart:async';",
			"",
			"import 'package:bloc_basis/bloc_basis.dart';",
			"",
			"class $0Bloc extends BlocBasis<$0Bloc> {",
			"",
			"  @override",
			"  late BehaviorSubject<BlocState<$0Bloc>> state;",
			"  @override",
			"  late BehaviorSubject<BlocEvent<$0Bloc>> event;",
			"",
			"  @override",
			"  void mapEventToState() {",
			"    event.switchMap((e) async* {",
			"    yield $0LoadingState();",
			"",
			"    /// Put your logic here!",
			"",
			"    }).listen((value) => state.add(value as BlocState<$0Bloc>));",
			"  }",
			"",
			"  @override",
			"  Future<void> dispose() async {",
			"    await state.close();",
			"    await event.close();",
			"  }",
			"",
			"}",
			"",
			"///",
			"/// EVENTS SECTION",
			"///", 
			"class $0InitialEvent extends BlocEvent<$0Bloc> {}",
			"",
			"///",
			"/// STATES SECTION",
			"///", 
			"class $0LoadingState extends BlocState<$0Bloc> {}",
			"class $0ErrorState extends BlocState<$0Bloc> {}",
			"class $0LoadedState extends BlocState<$0Bloc> {}",
		],
        "description": "A Simple Dart BLoC Scaffold"
	}
}